name: Release
on:
  push:
    tags:
      - '*.*.*'
      - '*.*.*-rc*'
jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_tag: ${{ steps.extract_tag.outputs.tag }}
    steps:
      # Generate the release changelog from commits since the last release
      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v1.4.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Extract the tag
      # see: https://stackoverflow.com/a/58178121/4705719
      - name: Extract Release Tag
        id: extract_tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      # Create and upload assets to a release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: ${{ contains('rc', github.ref) }}
          body: ${{ steps.build_changelog.outputs.changelog }}
  build_and_upload_artifacts:
    name: Build and Upload Artifacts
    needs: create_release
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        elasticsearch:
          - 7.6.2
          - 7.6.1
          - 7.6.0
          - 7.5.2
          - 7.5.1
          - 7.5.0
          - 7.4.2
          - 7.4.1
          - 7.4.0
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        env:
          ELASTICSEARCH_VERSION: ${{ matrix.elasticsearch }}
          ZENTITY_VERSION: ${{ needs.create_release.outputs.release_tag }}
        run: |
          mvn --batch-mode clean package \
              -Delasticsearch.version=${ELASTICSEARCH_VERSION} \
              -Dzentity.version=${ZENTITY_VERSION} \
              --file pom.xml
      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ELASTICSEARCH_VERSION: ${{ matrix.elasticsearch }}
          ZENTITY_VERSION: ${{ needs.create_release.outputs.release_tag }}
        with:
          # Pull from the create_release job above, referencing it's ID to get its outputs object, which include a `upload_url`.
          # see: https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idoutputs
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./target/releases//zentity-${ZENTITY_VERSION}-elasticsearch-${ELASTICSEARCH_VERSION}.zip
          asset_name: zentity-${ZENTITY_VERSION}-elasticsearch-${ELASTICSEARCH_VERSION}.zip
          asset_content_type: application/zip
